#include<bits/stdc++.h>
using namespace std;
#define elif else if
#define INF 1e9+9
#define ERR 1e-8
#define mod %
typedef long long ll;typedef unsigned long long ull;typedef string str;typedef vector<ll> Vll;typedef vector< vector<ll> > Vll2; 
inline ll read(){bool f=1;ll x=0;char ch=getchar();while(ch<'0'||ch>'9'){if(ch=='-')f=!f;ch=getchar();}while(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}return(f?x:-x);}
inline void read(ll& num){bool f=1;ll x=0;char ch=getchar();while(ch<'0'||ch>'9'){if(ch=='-')f=!f;ch=getchar();}while(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}num=(f?x:-x);}
inline void write(ll x){if(x<0)putchar('-'),x=-x;if(x>9)write(x/10);putchar(x%10+'0');return;}
void input();void solve();bool match1();void solve1();bool match2();void solve2();bool match3();void solve3();

const ll N = 1e5+9;
ll n;
// ll cnt[] = {6, 2, 5, 5, 4, 5, 6, 3, 7, 6, 8, 4, 7, 7, 6, 7, 8, 5, 9, 8, 11, 7, 10, 10, 9, 10, 11, 8, 12, 11, 11, 7, 10, 10, 9, 10, 11, 8, 12, 11, 10, 6, 9, 9, 8, 9, 10, 7, 11, 10, 11, 7, 10, 10, 9, 10, 11, 8, 12, 11, 12, 8, 11, 11, 10, 11, 12, 9, 13, 12, 9, 5, 8, 8, 7, 8, 9, 6, 10, 9, 13, 9, 12, 12, 11, 12, 13, 10, 14, 13, 12, 8, 11, 11, 10, 11, 12, 9, 13, 12, 14, 10, 13, 13, 12, 13, 14, 11, 15, 14, 10, 6, 9, 9, 8, 9, 10, 7, 11, 10, 13, 9, 12, 12, 11, 12, 13, 10, 14, 13, 13, 9, 12, 12, 11, 12, 13, 10, 14, 13, 12, 8, 11, 11, 10, 11, 12, 9, 13, 12, 13, 9, 12, 12, 11, 12, 13, 10, 14, 13, 14, 10, 13, 13, 12, 13, 14, 11, 15, 14, 11, 7, 10, 10, 9, 10, 11, 8, 12, 11, 15, 11, 14, 14, 13, 14, 15, 12, 16, 15, 14, 10, 13, 13, 12, 13, 14, 11, 15, 14, 17, 13, 16, 16, 15, 16, 17, 14, 18, 17, 13, 9, 12, 12, 11, 12, 13, 10, 14, 13, 16, 12, 15, 15, 14, 15, 16, 13, 17, 16, 16, 12, 15, 15, 14, 15, 16, 13, 17, 16, 15, 11, 14, 14, 13, 14, 15, 12, 16, 15, 16, 12, 15, 15, 14, 15, 16, 13, 17, 16, 17, 13, 16, 16, 15, 16, 17, 14, 18, 17, 14, 10, 13, 13, 12, 13, 14, 11, 15, 14, 18, 14, 17, 17, 16, 17, 18, 15, 19, 18, 17, 13, 16, 16, 15, 16, 17, 14, 18, 17, 17, 13, 16, 16, 15, 16, 17, 14, 18, 17, 13, 9, 12, 12, 11, 12, 13, 10, 14, 13, 16, 12, 15, 15, 14, 15, 16, 13, 17, 16, 16, 12, 15, 15, 14, 15, 16, 13, 17, 16, 15, 11, 14, 14, 13, 14, 15, 12, 16, 15, 16, 12, 15, 15, 14, 15, 16, 13, 17, 16, 17, 13, 16, 16, 15, 16, 17, 14, 18, 17, 14, 10, 13, 13, 12, 13, 14, 11, 15, 14, 18, 14, 17, 17, 16, 17, 18, 15, 19, 18, 17, 13, 16, 16, 15, 16, 17, 14, 18, 17, 16, 12, 15, 15, 14, 15, 16, 13, 17, 16, 12, 8, 11, 11, 10, 11, 12, 9, 13, 12, 15, 11, 14, 14, 13, 14, 15, 12, 16, 15, 15, 11, 14, 14, 13, 14, 15, 12, 16, 15, 14, 10, 13, 13, 12, 13, 14, 11, 15, 14, 15, 11, 14, 14, 13, 14, 15, 12, 16, 15, 16, 12, 15, 15, 14, 15, 16, 13, 17, 16, 13, 9, 12, 12, 11, 12, 13, 10, 14, 13, 17, 13, 16, 16, 15, 16, 17, 14, 18, 17, 16, 12, 15, 15, 14, 15, 16, 13, 17, 16, 17, 13, 16, 16, 15, 16, 17, 14, 18, 17, 13, 9, 12, 12, 11, 12, 13, 10, 14, 13, 16, 12, 15, 15, 14, 15, 16, 13, 17, 16, 16, 12, 15, 15, 14, 15, 16, 13, 17, 16, 15, 11, 14, 14, 13, 14, 15, 12, 16, 15, 16, 12, 15, 15, 14, 15, 16, 13, 17, 16, 17, 13, 16, 16, 15, 16, 17, 14, 18, 17, 14, 10, 13, 13, 12, 13, 14, 11, 15, 14, 18, 14, 17, 17, 16, 17, 18, 15, 19, 18, 17, 13, 16, 16, 15, 16, 17, 14, 18, 17, 18, 14, 17, 17, 16, 17, 18, 15, 19, 18, 14, 10, 13, 13, 12, 13, 14, 11, 15, 14, 17, 13, 16, 16, 15, 16, 17, 14, 18, 17, 17, 13, 16, 16, 15, 16, 17, 14, 18, 17, 16, 12, 15, 15, 14, 15, 16, 13, 17, 16, 17, 13, 16, 16, 15, 16, 17, 14, 18, 17, 18, 14, 17, 17, 16, 17, 18, 15, 19, 18, 15, 11, 14, 14, 13, 14, 15, 12, 16, 15, 19, 15, 18, 18, 17, 18, 19, 16, 20, 19, 18, 14, 17, 17, 16, 17, 18, 15, 19, 18, 15, 11, 14, 14, 13, 14, 15, 12, 16, 15, 11, 7, 10, 10, 9, 10, 11, 8, 12, 11, 14, 10, 13, 13, 12, 13, 14, 11, 15, 14, 14, 10, 13, 13, 12, 13, 14, 11, 15, 14, 13, 9, 12, 12, 11, 12, 13, 10, 14, 13, 14, 10, 13, 13, 12, 13, 14, 11, 15, 14, 15, 11, 14, 14, 13, 14, 15, 12, 16, 15, 12, 8, 11, 11, 10, 11, 12, 9, 13, 12, 16, 12, 15, 15, 14, 15, 16, 13, 17, 16, 15, 11, 14, 14, 13, 14, 15, 12, 16, 15, 19, 15, 18, 18, 17, 18, 19, 16, 20, 19, 15, 11, 14, 14, 13, 14, 15, 12, 16, 15, 18, 14, 17, 17, 16, 17, 18, 15, 19, 18, 18, 14, 17, 17, 16, 17, 18, 15, 19, 18, 17, 13, 16, 16, 15, 16, 17, 14, 18, 17, 18, 14, 17, 17, 16, 17, 18, 15, 19, 18, 19, 15, 18, 18, 17, 18, 19, 16, 20, 19, 16, 12, 15, 15, 14, 15, 16, 13, 17, 16, 20, 16, 19, 19, 18, 19, 20, 17, 21, 20, 19, 15, 18, 18, 17, 18, 19, 16, 20, 19, 18, 14, 17, 17, 16, 17, 18, 15, 19, 18, 14, 10, 13, 13, 12, 13, 14, 11, 15, 14, 17, 13, 16, 16, 15, 16, 17, 14, 18, 17, 17, 13, 16, 16, 15, 16, 17, 14, 18, 17, 16, 12, 15, 15, 14, 15, 16, 13, 17, 16, 17, 13, 16, 16, 15, 16, 17, 14, 18, 17, 18, 14, 17, 17, 16, 17, 18, 15, 19, 18, 15, 11, 14, 14, 13, 14, 15, 12, 16, 15, 19, 15, 18, 18, 17, 18, 19, 16, 20, 19, 18, 14, 17, 17, 16, 17, 18, 15, 19, 18, 20};
// //          0  1  2  3  4  5  6  7  8  9
ll ans[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 8, 9, 6, 9, 29, 39, 38, 65, 88, 128};
void input() {
//  freopen("matches.in","r",stdin);
//  freopen("matches.out","w",stdout);
    // for (ll n = 1; n <= 24; n++) {
    //     ll ans = 0;
    //     for (ll a = 0; a <= 1000; a++) {
    //         for (ll b = 0; b <= 1000; b++) {
    //             for (ll c = 0; c <= 1000; c++) {
    //                 if (a + b == c && cnt[a] + cnt[b] + cnt[c] + 4 == n)
    //                     ans++;
    //             }
    //         }
    //     }
    //     cout << ans <<", ";
    // }
    read(n);
    write(ans[n - 1]);
}
void solve() {
    
}
bool match1() {
    return 0;
}
void solve1() {
    solve();
}
bool match2() {
    return 0;
}
void solve2() {
    solve();
}
bool match3() {
    return 0;
}
void solve3() {
    solve();
}
int main(){
	input();
    if(match1()) solve1();
    elif(match2()) solve2();
    elif(match3()) solve3();
    else solve();
	return 0;
}
